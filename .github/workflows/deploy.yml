name: Deploy to Server

on:
  push:
    branches:
      - main
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to Docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: poposnek/personal-website
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate artifact attestations
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: index.docker.io/poposnek/personal-website
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
      - name: Detect environment
        run: |
          if [ "$GITHUB_ACTIONS" = "true" ]; then
            echo "‚úÖ Inside GitHub Actions runner"
          else
            echo "üè† Running on SSH'd remote server"
          fi

      - name: Deploy App
        run: |
          ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SERVER_IP }}  
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin 
          sudo docker image pull poposnek/personal-website:main
          sudo docker image ls
          sudo docker run -d -p 5050:5050 --name personal-website-fe personal-website
          exit